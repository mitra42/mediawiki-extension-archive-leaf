#!/usr/bin/env bash
echo "Installing mediawiki-extension-archive-leaf fonts for offline use of Palm wiki"
set -e
MEDIAWIKI="../.."
ARCHIVELEAFDIR="."
#MEDIAWIKI=/usr/share/mediawiki
#MEDIAWIKI=/var/www/html/mediawiki
#ARCHIVELEAFDIR=${MEDIAWIKI}/extensions/ArchiveLeaf
#TODO offline-fonts could just use the env variables
export MEDIAWIKI ARCHIVELEAFDIR

# This is following the steps in README.md
pushd ${ARCHIVELEAFDIR} >>/dev/null
maintenance/transcriber-install # yarn dependencies
maintenance/offline-fonts # Install offline fonts
maintenance/transcriber-build # transcriber javascript and css
maintenance/templates-import # import the required Template:Entry and Template:EntryImage pages into MediaWiki.
# The Metrolook skin is included here, because MediaWiki's skin distribution system makes it impossible (maybe intentionally)
# to script fetching skins.
# You can get the skin at https://www.mediawiki.org/wiki/Skin:Metrolook
# and I've opened a discussion at https://www.mediawiki.org/wiki/Extension_talk:ExtensionDistributor
# but searching some past history suggests this is one of those wicked discussions they'll never solve
# because they've scoped the problem just too hard!
if [ -d ${MEDIAWIKI}/skins/Metrolook ]
then
  echo "Metrolook skin appears to be installed"
else
  tar -xzf skins/Metrolook.tar.gz -C ${MEDIAWIKI}/skins
fi

APACHECONF=/etc/apache2/conf-available/mediawiki.conf
APACHECONFLINE='Alias /transcriber/static /var/lib/mediawiki/extensions/ArchiveLeaf/transcriber/build/static'

if [ -f ${APACHECONF} ]
then
  grep 'transcriber/static' ${APACHECONF} || sudo echo ${APACHECONFLINE} >>${APACHECONF}
  sudo apachectl graceful
else
  cat <<EOT
I cant find the Apache configuration file in $APACHECONF if you are running nginx, it will need lines like ...
location /transcriber/static {
    alias /var/www/palmleaf/extensions/ArchiveLeaf/transcriber/build/static;
}
EOT
fi


function appendOrReplaceBegin {
  LOCALSETTINGSBAK=${MEDIAWIKI}/LocalSettings.`date -Iminutes`.php
  if [ -f "${LOCALSETTINGS}" ]
  then
    echo "Saving old copy of ${LOCALSETTINGS}"
    sudo cp ${LOCALSETTINGS} ${LOCALSETTINGSBAK}
  fi
}
function appendOrReplaceEnd {
  diff ${LOCALSETTINGSBAK} ${LOCALSETTINGS} || echo "===changes made above ==="
}
function appendOrReplace {
  if grep $1 ${LOCALSETTINGS}
  then
    echo "Swapping in place to: $2"
    sudo sed -i -e "s!^.*$1.*\$!$2!" ${LOCALSETTINGS}
  else
    echo "Appending: $2"
    echo $2 | sudo tee -a ${LOCALSETTINGS}
  fi
}

appendOrReplaceBegin
appendOrReplace wgAllowExternalImages '$wgAllowExternalImages = true;'
appendOrReplace wgAllowImageTag '$wgAllowImageTag = true;'
appendOrReplace wgCapitalLinks '$wgCapitalLinks = false;'
appendOrReplace wgAllowDisplayTitle '$wgAllowDisplayTitle = true;'
appendOrReplace wgRestrictDisplayTitle '$wgRestrictDisplayTitle = false;'
appendOrReplace wgAllowCopyUploads '$wgAllowCopyUploads = true;'
appendOrReplace wgEnableUploads '$wgEnableUploads = true;'
appendOrReplace max_execution_time 'ini_set('max_execution_time', 0);'
appendOrReplace wgUseImageMagick '$wgUseImageMagick = true;'
appendOrReplace "wfLoadExtension.*ArchiveLeaf" 'wfLoadExtension( 'ArchiveLeaf' );'
appendOrReplace "wfLoadSkin.*Metrolook" 'wfLoadSkin( 'Metrolook' );'
appendOrReplace wgMetrolookDownArrow '$wgMetrolookDownArrow = false;'
appendOrReplace wgMetrolookUploadButton '$wgMetrolookUploadButton = false;'
appendOrReplace wgDefaultSkin '$wgDefaultSkin = 'Metrolook';'
appendOrReplace "wgGroupPermissions.*user.*archiveleaf" '$wgGroupPermissions['user']['archiveleaf'] = true; # Allow users to import pages (by default only "sysops" allowed to improt pages)'
appendOrReplace "wgArchiveLeafTemplateName" '$wgArchiveLeafTemplateName = "Entry"; # primary template (default shown)'
appendOrReplace wgArchiveLeafTemplateImageName '$wgArchiveLeafTemplateImageName = "EntryImage"; # per-image template (default shown)'
appendOrReplace wgArchiveLeafImportScript '$wgArchiveLeafImportScript = "/home/davidk/script/update_ia_item.py"; # script to run after importing IA item as a new wiki page. item identifier is passed as an argument.'
appendOrReplace wgArchiveLeafBaseURL '$wgArchiveLeafBaseURL = $wgServer; # base URL (default "https://archive.org" )'
appendOrReplace wgArchiveLeafApiURL '$wgArchiveLeafApiURL = $wgServer; # API URL (default "https://api.archivelab.org")'
appendOrReplace wgArchiveLeafIiifBaseUrl '$wgArchiveLeafIiifBaseUrl = $wgServer . "/iiif" # IIIF API online would be: https://iiif.archivelab.org/iiif'
appendOrReplaceEnd

popd >>/dev/null
